---
title: "Team_SDM_OHW24"
format: html
editor: visual
---

```{r message = FALSE, warning = FALSE}
knitr::opts_chunk$set(message = FALSE, warning = FALSE)

```

# Jessie's Thesis SDM workflow

## Project Workflow

## Installing libraries

```{r}
source("Setup.R")
# install.packages(remotes)

```

```{r}
vars = read_config()
crab_sdm_data = read_DMR()
crab_sdm_data = pa_species2(s = crab_sdm_data, species = "Crab Jonah")


```

## Obtain and extract environmental data from sdmpredictors and call functions to prep for the model

```{r}
bb = get_bb()
env = read_sdmpredictors(bb = bb) 
values = st_extract(env, sdm_data) |> st_drop_geometry() |> as_tibble()
data = bind_cols(sdm_data, values) |> relocate(geometry, .after = last_col())
```

Present SDM model using bottom temp and bottom salinity

```{r}
pres_env_files <- c(
  "~/Desktop/Thesis_data/Biooraclev3/large_poly/temp_depth_mean/baseline/2000/",
  "/Users/lizamaguire/Desktop/Thesis_data/pres/bot_sal_mean.tif"
)

# Create a raster stack
pres_env_stack <- stack(pres_env_files)

# Define Gulf of Maine polygon
gulf_of_maine_poly <- terra::vect(
  "POLYGON((-73.0 46.0, -64.0 46.0, -64.0 42.5, -68.5 41.0, -72.0 41.0, -73.0 42.5, -73.0 46.0))",
  crs = "EPSG:4326"
)

# Ensure CRS compatibility between the raster stack and the polygon
if (!identical(crs(pres_env_stack), crs(gulf_of_maine_poly))) {
  gulf_of_maine_poly <- terra::project(gulf_of_maine_poly, crs(pres_env_stack))
}

# Convert polygon to a format compatible with the raster package
gulf_of_maine_poly_raster <- as(gulf_of_maine_poly, "Spatial")

# Crop and mask the raster stack to the Gulf of Maine region
pres_env_stack <- crop(pres_env_stack, extent(gulf_of_maine_poly_raster))  # Crop to extent
pres_env_stack <- mask(pres_env_stack, gulf_of_maine_poly_raster)  # Mask by polygon

# Plot the cropped and masked stack
plot(pres_env_stack)
```

## Fit the model

```{r}
gam_sdm_model <- mgcv::gam(
  count ~ s(bot_temp, k=4), 
  data = Jcrab_sdm_data,
  family = binomial(link = "logit")
) |> readr::write_rds(file.path(THESIS_DATA, "V0_Models", "V0_gam.model"))
```

```{r}
  # Plot the response curves
plot(gam_sdm_model, 
     pages = 1,       # Display on a single page (if you have multiple smooth terms)
     xlab = "Bottom Temperature (ÂºC)")

summary(gam_sdm_model)

responses <- plot(gam_sdm_model)
pdf(file.path(THESIS_DATA, "V0_Models", "V0_gam.pdf"))
plot(gam_sdm_model, pages=1)
ok = dev.off()
```

```{r}
log_reg_mod = glm(count ~ bot_temp, family = binomial, data = pa_crab) 



# Summarize the model results

glance(log_reg_mod) 

ggplot(pa_crab, aes(x=count, y=bot_temp)) + geom_point() +
      stat_smooth(method="glm", color="green", se=FALSE, 
                method.args = list(family=binomial))
```

```{r}
bot_temp_2040sp119 = "/Users/lizamaguire/Desktop/Thesis_data/Biooraclev3/large_poly/temp_depth_mean/ssp119/2040/ssp119_2040_depthmean_thetao_mean.tif"

bot_temp = read_stars(bot_temp_2040sp119)

# Convert stars object to data.frame (extracting values)
bot_temp <- as.data.frame(bot_temp_2040sp119stars, wide = TRUE)

# Apply the prediction (ensure gam_sdm_model is the correct model)
pred <- predict(gam_sdm_model, newdata = bot_temp, type = "response")









pred <- predict(bot_temp_2040sp119stars, gam_sdm_model, type = "response")

# Plot the resulting raster
plot(pred)

clamp <- TRUE      
type <- "cloglog"

present_predicted_stars <- st_as_stars(pred)

m <- leaflet() %>%
  addTiles() %>%
  leafem::addStarsImage(
    present_predicted_stars,
    colors = viridis::viridis(256),
    opacity = 0.8
  )

m
```

## Process future environmental scenario data to predict species distribution

```{r}
RCP45.2050_env_files <- c(
  "/Users/lizamaguire/Desktop/Thesis_data/SDMpredictors/2050 conditions/RCP45/2050AOGCM.RCP45.Benthic.Max.Depth.Temperature.Mean.tif.BOv2_1.tif",
  "/Users/lizamaguire/Desktop/Thesis_data/SDMpredictors/2050 conditions/RCP45/2050AOGCM.RCP45.Benthic.Max.Depth.Salinity.Mean.tif.BOv2_1.tif"
)

# Create a raster stack
RCP45.2050_env_stack <- stack(RCP45.2050_env_files)

# Define Gulf of Maine polygon
gulf_of_maine_poly <- terra::vect(
  "POLYGON((-73.0 46.0, -64.0 46.0, -64.0 42.5, -68.5 41.0, -72.0 41.0, -73.0 42.5, -73.0 46.0))",
  crs = "EPSG:4326"
)
# Convert polygon to a format compatible with the raster package
gulf_of_maine_poly_raster <- as(gulf_of_maine_poly, "Spatial")

# Crop and mask the raster stack to the Gulf of Maine region
RCP45.2050_env_stack <- crop(RCP45.2050_env_stack, extent(gulf_of_maine_poly_raster))  # Crop to extent
RCP45.2050_env_stack <- mask(RCP45.2050_env_stack, gulf_of_maine_poly_raster)  # Mask by polygon

# Plot the cropped and masked stack
plot(RCP45.2050_env_stack)
```

```{r}
gam_sdm_model <- mgcv::gam(
  pa ~ s(bot_temp_mean, k=4) + s(bot_sal_mean, k=4), 
  data = data,
  family = binomial(link = "logit")
) |> readr::write_rds(file.path(THESIS_DATA, "V0_Models", "V0_gam.model"))
```

```{r}
RCP45.2050pred <- raster::predict(RCP45.2050_env_stack, gam_sdm_model, type = "response")

# Plot the resulting raster
plot(RCP45.2050pred)

clamp <- TRUE      
type <- "cloglog"

RCP45.2050_predicted_stars <- st_as_stars(RCP45.2050pred)

m <- leaflet() %>%
  addTiles() %>%
  leafem::addStarsImage(
    RCP45.2050_predicted_stars,
    colors = viridis::viridis(256),
    opacity = 0.8
  )

m
```

## Plot the SDM using leaflet

```{r}
# Create a leaflet map and add the predicted species distribution
m <- leaflet() %>%
  addTiles() %>%
  leafem::addStarsImage(
envRasterStack,              # Ensure this is a stars object
    colors = viridis::viridis(256), # Color palette
    opacity = 0.8                  # Set opacity
  )

# Display the map
m

```

## Plotting SDM for alternate year and climate scenario

```{r}
  #plotting SDM for the year 2100 in climate scenario RCP85
future_layers_RCP85 <- sdmpredictors::list_layers_future(marine = TRUE) %>% 
  filter(current_layer_code %in% c(vars$envVars)) %>% 
  filter(year == "2100") %>% 
  filter(scenario == "RCP85") %>% 
  filter(model == "AOGCM")
future_layers_list_RCP85 <- future_layers_RCP85$layer_code

  #concatenate and stack all environmental raster layers 
BO21_tempmean_bdmax <- get_enviro_data(future_layers_list_RCP85[1])
BO21_tempmean_ss <- get_enviro_data(future_layers_list_RCP85[2])
BO22_chlomean_ss <- get_enviro_data(future_layers_list_RCP85[3])
BO22_salinitymean_bdmax <- get_enviro_data(future_layers_list_RCP85[4])
BO22_salinitymean_ss <- get_enviro_data(future_layers_list_RCP85[5])
concat <- c(BO21_tempmean_bdmax, BO21_tempmean_ss, BO22_chlomean_ss, BO22_salinitymean_bdmax, BO22_salinitymean_ss)

names(concat) <- future_layers_RCP85$current_layer_code

  #logistic model type
clamp <- TRUE      
type <- "logistic"

  # Predict species distribution within the cropped area
predicted_RCP85 <- predict(sdm.model, concat)

plot(predicted_RCP85)
```

## Map SDM for RCP85 in year 2100 in leaflet and visualize results

```{r}
library(leaflet)
m <- leaflet() %>% 
  addTiles() %>% 
  leafem::addStarsImage(predicted_RCP85, 
                        colors = viridis::viridis(256), 
                        opacity = 0.8)

m
```
